# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Hy4tYjqVD146-0v_sFCy8VBB3k3ocYH5
"""

import pandas as pd

import pandas as pd

# Corrected URL to the raw CSV data
url = "https://raw.githubusercontent.com/Sulistiawati126/Proyek/main/Data%20ulasan%20Shopee%20tentang%20COD.csv"

# Read the CSV file from the raw URL
df = pd.read_csv(url)

# Display the first 1160 rows
df.head(1160)



# prompt: berikan saya kode untuk menampilkan 3 fitur halaman seperti dashboard, model, dan prediksi data pada streamlit

# Install streamlit if it's not already installed


import streamlit as st
import pandas as pd
import re # Import the re module for regular expressions

# Import necessary libraries for preprocessing (if not already installed)
try:
    from Sastrawi.Stemmer.StemmerFactory import StemmerFactory
    from Sastrawi.StopWordRemover.StopWordRemoverFactory import StopWordRemoverFactory
except ImportError:
    st.error("Please run '!pip install Sastrawi' to install necessary libraries.")
    st.stop()

# Corrected URL to the raw CSV data
url = "https://raw.githubusercontent.com/Sulistiawati126/Proyek/main/Data%20ulasan%20Shopee%20tentang%20COD.csv"

# Read the CSV file from the raw URL
@st.cache_data
def load_data(url):
    try:
        df = pd.read_csv(url)
        return df
    except Exception as e:
        st.error(f"Error loading data: {e}")
        return None

df = load_data(url)

# Data Preprocessing Function
def preprocess_text(text):
    # Create stemmer
    factory = StemmerFactory()
    stemmer = factory.create_stemmer()
    # Create stopword remover
    factory = StopWordRemoverFactory()
    stopword_remover = factory.create_stop_word_remover()

    # Case folding
    text = text.lower()
    # Remove numbers and punctuation
    text = re.sub(r'[^a-zA-Z\s]', '', text, re.I|re.A)
    # Tokenization
    tokens = text.split()
    # Stopword removal
    tokens = [word for word in tokens if word not in stopword_remover.get_stop_words()]
    # Stemming
    tokens = [stemmer.stem(word) for word in tokens]
    # Join back to string
    return ' '.join(tokens)

# --- Streamlit App Structure ---

st.sidebar.title("Navigasi")
page = st.sidebar.radio("Pilih Halaman", ["Dashboard", "Model", "Prediksi Data"])

if page == "Dashboard":
    st.title("Dashboard Analisis Data")

    if df is not None:
        st.header("Pratinjau Data")
        st.dataframe(df.head(10)) # Display first 10 rows for dashboard

        st.header("Informasi Data")
        st.write(f"Jumlah baris: {df.shape[0]}")
        st.write(f"Jumlah kolom: {df.shape[1]}")
        st.write("Nama kolom:")
        st.write(df.columns.tolist())

        st.header("Statistik Deskriptif")
        st.write(df.describe(include='all'))

    else:
        st.warning("Data belum berhasil dimuat.")


elif page == "Model":
    st.title("Informasi Model")
    st.write("""
    Bagian ini akan menampilkan informasi mengenai model yang digunakan untuk analisis atau prediksi.
    Ini bisa mencakup:
    - Jenis model (misalnya, Klasifikasi, Regresi, Analisis Sentimen)
    - Metrik evaluasi model
    - Visualisasi hasil pelatihan (optional)
    - Detail arsitektur model (jika relevan)
    """)
    st.warning("Detail model belum diimplementasikan.")


elif page == "Prediksi Data":
    st.title("Prediksi Data")
    st.write("""
    Gunakan bagian ini untuk memasukkan data baru dan mendapatkan prediksi dari model.
    """)

    st.header("Masukkan Data untuk Prediksi")
    # Example of a text input for prediction (e.g., a new review)
    new_review = st.text_area("Masukkan ulasan baru di sini:", "Contoh: Pelayanan cepat dan barang bagus!")

    if st.button("Prediksi"):
        if new_review:
            # Here you would integrate your trained model
            # For demonstration, let's just display the processed text
            processed_review = preprocess_text(new_review) # Make sure preprocess_text is defined
            st.write("Ulasan setelah preprocessing:")
            st.write(processed_review)
            st.info("Output prediksi dari model akan ditampilkan di sini setelah model dilatih.")
        else:
            st.warning("Silakan masukkan ulasan untuk diprediksi.")
